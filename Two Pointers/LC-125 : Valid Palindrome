#LEETCODE 125
#1-> O(n) Time and O(n) Space
class Solution:
    def isPalindrome(self, s: str) -> bool:
        s1=[]
        for i in s:
            if i.isalnum():
                s1.append(i.lower())
        s1="".join(s1)
        s1=s1.strip()
        s1=s1.replace(" ","")
        rev=s1[::-1]
        if s1==rev:
            return True
        else:
            return False

#1-> O(n) Time and O(1) Space
class Solution:
    def isPalindrome(self, s: str) -> bool:
        i,j=0,len(s)-1
        while i<j:
            if not s[i].isalnum():
                i+=1
            elif not s[j].isalnum():
                j-=1
            elif s[i].lower()==s[j].lower():
                i+=1
                j-=1
            else:
                return False
        return True
