#LEETCODE 15
class Solution:
    def threeSum(self, nums: List[int]) -> List[List[int]]:
        triplets=[]
        nums.sort()
        for ind,val in enumerate(nums):
            #if same value, we dont wanna check 2 times cuz lazy (efficient)
            if (ind>0 and val==nums[ind-1]):
                continue
            left=ind+1
            right=len(nums)-1
            while(left<right):
                currsum=val+nums[left]+nums[right]
                if currsum>0:
                    right-=1
                elif currsum<0:
                    left+=1
                else:
                    triplets.append([val,nums[left],nums[right]])
                    left+=1
                    while(left<right) and nums[left]==nums[left-1]:
                        left+=1
        return triplets
